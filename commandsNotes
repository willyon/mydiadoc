/***********************************************************************************
 * 一.vim编辑器命令
************************************************************************************/

/************************************************
 * 1.普通模式
**************************************************/

/*复制光标所在字词*/
yw

/*标记某一行，但不会显示有颜色.a～z只能用于当前缓冲区，而A～Z则可以跨越不同缓冲区*/
m+a~z/A~Z 

/*返回相应标记符号的行首。承上：e.g:你处在file1时可用命令`A，跳转至file2中，之前所建标记A*/
'a～z/A~Z 

/*返回相应标记符行上次离开的位置。'是单引号，`是反引号：*/
`a~z/A~Z  

/*复制被标记为a的行*/
y`a

/*删除被标记为a的行*/
d`a

/*全局自动缩进*/
gg=G

/*代码折叠指令*/
zc  折叠子代内容
zC  折叠家族内容(即祖代与子代皆折叠)
zo  展开子内容
zO  展开家族内容
zr  展开整个文件代码当前代的下一代代码(即捕获展开)
zm  折叠整个文件代码当前代的上一代代码(即冒泡折叠)
[z  到当前打开的折叠的开始处
]z  到当前打开的折叠的末尾处


/******************************************************
 * 2.命令行模式
*******************************************************/

/*横向打开文件*/
:sp filename

/*纵向打开文件*/
:vsp filename 

/*列出所有标记,包括一些系统内置的特殊标记*/
:marks 

/*删除某个或多个标记*/
:delmarks a b c...

/*删除所有标记*/
:delmarks! 

/*高亮某一列*/
":set cc=[Num] Num表示需要高亮的一列（填入一个数字即可）




/************************************************************************************************
 * 二.Linux shell命令
**************************************************************************************************/

/*垂直/水平打开多个窗口*/
vim -O/o file1 file2 file3 ... 


/*该字符组合在命令行下是一个特殊环境变量，代表上一行命令语句的最后一个字符串*/
!$ 

e.g:  ~$:mkdir mydir
      ~$:mv mydir yourdir/haha
      ~$:cd yourdir/haha
      等价于：
      ~$:mkdir mydir
      ~$:mv !$ yourdir/haha
      ~$:cd !$


/*以root身份执行上一条命令*/
sudo !!  


/*避免命令对某个文件的影响*/
! <filename>  

eg:rm !(file.txt) /* 删除当前目录中除文件file.txt外的所有文件*/
   rm !(*.txt)    /* 删除当前目录中除后缀名为.txt外的所有文件*/
                     

/*重定向 将本应输出在屏幕的内容(文本文件或二进制内容)重定向到一文本文件中*/
> 

eg:ll /home/willyon > ls.txt  /*此时列表信息存放在 ls.txt 文本文件中
                                    若继续执行ll /usr/bin > ls.txt 新列表信息会覆盖原有内容
                                    若要内容共存，把 > 改为 >> 即可，此时文件内容按重定向时间顺序共存*/


/*重定向 将文件内容重定向到标准输出*/
< 

eg:cat < ls.txt /*等价于cat ls.txt*/


/*回到上一次的目录*/
cd -   


/*内容查找*/
grep '目标内容' '查找范围'

eg:grep main t*         /* 在当前目录下，在以t开头的文本文件中，查找的包含 main 字符的行*/
   grep -r main t*      /*在当前目录及其子目录下，查找以t开头的文本文件中，包含 main 字符的行*/


/*结果显示*/
less:

eg:grep main -r main * | less /*查找结果在less显示。| 表示管道，即，前面命令的输出结果为后面命令的执行内容*/


/*显示ascii码表*/
man ascii

/*查看硬盘大小以及使用情况*/
df -hl  

/*返回该目录的大小（根据实际大小决定单位G/M/K/B）*/
du -sh <filename>  

/*查看cpu以及内存运行情况 proc：process 进程*/
cat /proc/cpuinfo
cat /proc/meminfo  


/*安装软件命令*/
aptitude 

e.g:sudo aptitude install software = sudo apt-get install software(安装)
    sudo aptitude remove software(安装注册名) = sudo apt-get remove s.f.
	                                            sudo apt-get automove
												(一步可删，两步可删干净)




/**************************************************************************************************
 * 三.Vundle插件命令(vim命令模式下输入)
***************************************************************************************************/

/*下载安装所管理的插件*/
:BundleInstall
or
:PluginInstall(以下命令中的 Bundle 皆可换为 Plugin )

/*下载安装所管理的插件(在shell命令行运行)*/
vim+BundleInstall+qall

/*更新插件*/
:BundleUpdate

/*清除 .vimrc 列表中没有的插件 即，若要卸载某插件，只需在 .vimrc 的Bundle列表中删除相应插件github仓库，然后在vim中执行下列命令即可*/
:BundleClean

/*列出所有插件*/
:BundleList



/***************************************************************************************************************************
  *css文本的颜色插件 ColorV 以下快捷命令可在 ~/.vim/bundle/colorv.vim/doc/colorv.txt中更改;而下面的<leader>指的是逗号 " , "
 ****************************************************************************************************************************/

/*在vim底部调出色块板*/
<leader>cv

/*调出色块后可点击所需颜色块复制*/
yy

/*调出调色板(已固定在桌面左侧菜单栏，所以也可以直接点击该图标打开)*/
<leader>cd

/*清除文本文件上的颜色*/
<leader>cpc
